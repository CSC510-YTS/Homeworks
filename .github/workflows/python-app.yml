# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write           # 'write' access to repository contents
  pull-requests: write      # 'write' access to pull requests

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest ./ --doctest-modules --junitxml=junit/test-results.xml --cov=./ --cov-report=xml --cov-report=html --cov-config=.coveragerc
    - name: Generate coverage badge with codecov
      if: always()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
    - name: Run autopep8
      run: |
        pip install autopep8
        autopep8 --in-place --aggressive --aggressive HW2/src/*.py > HW2/latest_logging/autopep8_logging 
        echo "Autopep8 run completed."
        autopep8 --diff HW2/src/*.py
    - name: Run pylint
      run: |
        pip install pylint
        pylint HW2/src > HW2/latest_logging/pylint_logging
    - name: Run radon cc and mi
      run: |
        pip install radon
        radon cc . > HW2/latest_logging/radon_cc_logging
        radon mi . > HW2/latest_logging/radon_mi_logging
    - name: Check for changes # This blocks behaviour is just the opposite
      run: |
        if git diff-index --quiet HEAD; then
          echo "changes_exist=true" >> $GITHUB_ENV
        else
          echo "changes_exist=false" >> $GITHUB_ENV
        fi

    - name: Commit
      if: env.changes_exist == 'true'
      run: |
        git config --local user.name  ${{ github.actor }}        
        git config --local user.email "${{ github.actor }}@users.noreply.github.com"
        git add HW2/latest_logging
        git commit -a -m "[Workflow] update the loggings"
    - name: Push changes  # push the output folder to your repo
      if: env.changes_exist == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
